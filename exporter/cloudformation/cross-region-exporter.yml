---
AWSTemplateFormatVersion: "2010-09-09"
Description: Defines the cross-region exporter resources
Parameters:
  SentryDsn:
    Type: String
    Description: Normally the misc project Sentry DSN
    NoEcho: true
  SentryEnvironment:
    Type: String
    Description: Sentry project environment

  Version:
    Type: String

Resources:
  ProjectVersionParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/project-versions/cfn-cross-region-export/${AWS::StackName}"
      Type: String
      Value: !Sub '{"Version": "${Version}", "RepositoryUrl": "https://github.com/PokaInc/cfn-cross-region-export"}'

  CrossStackRefTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: CrossStackRefId
          AttributeType: S
      KeySchema:
        - AttributeName: CrossStackRefId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: KEYS_ONLY

  CrossStackRefBucket:
    Type: AWS::S3::Bucket

  CrossRegionImportReplicationLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: ../../dist/cross_region_import_replication.zip
      Handler: cross_region_import_replication.lambda_handler
      Role: !GetAtt CrossRegionImportReplicationLambdaFunctionLambdaRole.Arn
      Runtime: python3.6
      Timeout: 300
      Environment:
        Variables:
          SENTRY_DSN: !Ref SentryDsn
          GENERATED_STACK_NAME: !Sub "${AWS::StackName}-ImportsReplication"
          CROSS_STACK_REF_TABLE_NAME: !Ref CrossStackRefTable
          SENTRY_ENVIRONMENT: !Ref SentryEnvironment
          TEMPLATE_BUCKET: !Ref CrossStackRefBucket
      Tags:
        - Key: SecurityClassification
          Value: Green
        - Key: Component
          Value: CrossRegionImportReplicationLambdaFunction

  CrossRegionImportReplicationLambdaFunctionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: ReadAndUpdateDynamoDb
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                Resource: !GetAtt CrossStackRefTable.Arn
        - PolicyName: CreateAndUpdateGeneratedCloudformation
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}-ImportsReplication/*"
        - PolicyName: PutAndDeleteSsmParameter
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:DeleteParameter
                  - ssm:AddTagsToResource
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*"
        - PolicyName: UploadTemplateToS3
          PolicyDocument:
            Statement:
              - Effect: "Allow"
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub "${CrossStackRefBucket.Arn}/*"
        - PolicyName: AccessDynamoStream
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:DescribeStream
                  - dynamodb:ListStreams
                Resource: !GetAtt CrossStackRefTable.StreamArn
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CrossRegionImporterLambdaEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt CrossStackRefTable.StreamArn
      FunctionName: !Ref CrossRegionImportReplicationLambdaFunction
      StartingPosition: TRIM_HORIZON

Outputs:
  CrossStackRefTableArn:
    Value: !GetAtt CrossStackRefTable.Arn
